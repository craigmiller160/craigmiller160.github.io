import{I as l,R as h,r as d,J as m}from"./index-13c14cd9.js";const f=["xxl","xl","lg","md","sm","xs"],x=s=>({xs:`(max-width: ${s.screenXSMax}px)`,sm:`(min-width: ${s.screenSM}px)`,md:`(min-width: ${s.screenMD}px)`,lg:`(min-width: ${s.screenLG}px)`,xl:`(min-width: ${s.screenXL}px)`,xxl:`(min-width: ${s.screenXXL}px)`}),b=s=>{const e=s,t=[].concat(f).reverse();return t.forEach((a,o)=>{const r=a.toUpperCase(),i=`screen${r}Min`,n=`screen${r}`;if(!(e[i]<=e[n]))throw new Error(`${i}<=${n} fails : !(${e[i]}<=${e[n]})`);if(o<t.length-1){const c=`screen${r}Max`;if(!(e[n]<=e[c]))throw new Error(`${n}<=${c} fails : !(${e[n]}<=${e[c]})`);const u=`screen${t[o+1].toUpperCase()}Min`;if(!(e[c]<=e[u]))throw new Error(`${c}<=${u} fails : !(${e[c]}<=${e[u]})`)}}),s};function $(){const[,s]=l(),e=x(b(s));return h.useMemo(()=>{const t=new Map;let a=-1,o={};return{matchHandlers:{},dispatch(r){return o=r,t.forEach(i=>i(o)),t.size>=1},subscribe(r){return t.size||this.register(),a+=1,t.set(a,r),r(o),a},unsubscribe(r){t.delete(r),t.size||this.unregister()},unregister(){Object.keys(e).forEach(r=>{const i=e[r],n=this.matchHandlers[i];n==null||n.mql.removeListener(n==null?void 0:n.listener)}),t.clear()},register(){Object.keys(e).forEach(r=>{const i=e[r],n=p=>{let{matches:u}=p;this.dispatch(Object.assign(Object.assign({},o),{[r]:u}))},c=window.matchMedia(i);c.addListener(n),this.matchHandlers[i]={mql:c,listener:n},n(c)})},responsiveMap:e}},[s])}function M(){const[,s]=d.useReducer(e=>e+1,0);return s}function g(){let s=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!0;const e=d.useRef({}),t=M(),a=$();return m(()=>{const o=a.subscribe(r=>{e.current=r,s&&t()});return()=>a.unsubscribe(o)},[]),e.current}const w=()=>g().lg===!0?3:5;export{w as u};
